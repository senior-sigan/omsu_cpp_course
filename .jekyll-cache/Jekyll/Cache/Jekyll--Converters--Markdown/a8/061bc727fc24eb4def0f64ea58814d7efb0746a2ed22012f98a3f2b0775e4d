I"<h1 id="изменение-аргументов-в-теорию">Изменение аргументов (в теорию)</h1>

<p>Иногда требуется поменять значение переменной, которая является аргументом функции. Так, например, действует <code class="language-plaintext highlighter-rouge">scanf</code>.</p>

<p>Изменение аргументов функции рекомендуется избегать. Лучше придумывать чистую функцию, которая возвращает результат, а не модифицирует внешнюю зависимость.</p>

<p>Напишите программу с функций с именем <code class="language-plaintext highlighter-rouge">multiply_by</code>, которая перемножает два числа и результата складывает вместо первого аргумента.</p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;stdlib.h&gt;
</span>
<span class="cp">#include "test.h"
</span>
<span class="cm">/**
 * Перемножает a и b.
 * Результат произведения складывает в a.
 *
 * @param a указатель на первый множитель.
 * Результат произведения перезаписывает значение по этому адресу.
 * @param b второй множитель.
 */</span>
<span class="kt">void</span> <span class="nf">multiply_by</span><span class="p">(</span><span class="kt">int</span><span class="o">*</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// TODO: напиши меня!</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">test</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// Это тесты. НЕ УДАЛЯЙТЕ ИХ!</span>
  <span class="c1">// Преподаватель будет грустить, если вы удалите тесты T_T.</span>
  <span class="c1">// Тесты проверяют, что ваш код работает правильно.</span>
  <span class="c1">// Если задача решена неправильно,</span>
  <span class="c1">// то в консоли вы увидите ошибку и пояснение.</span>
  <span class="c1">// Сдавайте лабу, когда устраните все ошибки в тестах.</span>
  <span class="c1">// Если возникли трудности, то попросите преподавателя вам помочь ^_^.</span>

  <span class="p">{</span>
    <span class="kt">int</span> <span class="n">res</span> <span class="o">=</span> <span class="mi">42</span><span class="p">;</span>
    <span class="n">multiply_by</span><span class="p">(</span><span class="o">&amp;</span><span class="n">res</span><span class="p">,</span> <span class="mi">2</span><span class="p">);</span>
    <span class="n">ASSERT_INT</span><span class="p">(</span><span class="mi">84</span><span class="p">,</span> <span class="o">==</span><span class="p">,</span> <span class="n">res</span><span class="p">);</span>
  <span class="p">}</span>

  <span class="p">{</span>
    <span class="kt">int</span><span class="o">*</span> <span class="n">ptr</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
    <span class="o">*</span><span class="n">ptr</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
    <span class="n">multiply_by</span><span class="p">(</span><span class="n">ptr</span><span class="p">,</span> <span class="o">-</span><span class="mi">33</span><span class="p">);</span>
    <span class="n">ASSERT_INT</span><span class="p">(</span><span class="o">-</span><span class="mi">99</span><span class="p">,</span> <span class="o">==</span><span class="p">,</span> <span class="o">*</span><span class="n">ptr</span><span class="p">);</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">test</span><span class="p">();</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET