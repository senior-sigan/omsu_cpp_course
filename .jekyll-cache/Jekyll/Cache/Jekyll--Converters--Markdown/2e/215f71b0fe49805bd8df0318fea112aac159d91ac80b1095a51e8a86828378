I"A#<h1 id="гайд-отладка-и-ide">Гайд. Отладка и IDE</h1>

<p>Что делать, если программа падает? Или в ней очевидно есть ошибка, но глазами по коду не видно в чем проблема. Или просто хочется выполнить код по шагам.</p>

<p>Простой вариант - добавить в каждую строчку <code class="language-plaintext highlighter-rouge">printf</code> и смотреть на вывод. Часто помогает, но не всегда. А иногда совсем не помогает, если непонятно поведение библиотеки, в которую print не воткнуть. Или когда нужно посмотреть внутрь сложных объектов.</p>

<p>ТруЪ программисты и используют отладчик (дебаггер)!</p>

<p>Обычно отладчиком пользуются из IDE, хотя сам он не является их частью. Просто так удобнее. IDE - это integrated development environment - интегрированная среда разработки. Интегрирует всё в себя. В ней можно жить.</p>

<ul>
  <li><a href="https://www.jetbrains.com/ru-ru/clion/">CLion</a> - кроссплатформенная среда разработки от JetBrains. Питерские ребята. Я в работе использую только. Платная, но для студентов - бесплатно.</li>
  <li><a href="https://visualstudio.microsoft.com/ru/vs/community/">MS Visual Studio</a> - среда разработки от майкрософта <del>для майкрософта</del>. Очень мощная. Раньше была только для венды, сейчас не только. Есть бесплатная версия Community Edition.</li>
  <li><a href="https://www.eclipse.org/downloads/packages/">Eclipse</a> - кроссплатформенная, бесплатная, древняя IDE. Я на ней писал на первом, втором, третьем курсе. На самом деле хорошая. Но сейчас считается устаревшей и фу-фу-фу.</li>
  <li><del>Emacs, Vim</del></li>
  <li>XCode - это для Apple.</li>
  <li><a href="https://code.visualstudio.com/">VScode</a> - бесплатный кроссплатформенная текстовый редактор с КУЧЕЙ ПЛАГИНОВ. Можно сделать всё что угодно. Иногда глючит и похоже на франкенштейна. Даже есть отладчик!</li>
</ul>

<h2 id="отладчик-в-современных-ide">Отладчик в современных IDE</h2>

<p>Далее копипаста из документации среду разработки CLion, но в других средах разработки всё тоже самое:</p>

<ul>
  <li>Брейкпоинты на строчки кода. Программа остановит своё выполнение на этой строчке и можно будет посмотреть на содержимое переменных в данном контексте.</li>
</ul>

<p><img src="%D0%93%D0%B0%D0%B8%CC%86%D0%B4%20%D0%9E%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0%20%D0%B8%20IDE%2055d8af92f0b148b9a5fe2856c899d540/Untitled.png" alt="%D0%93%D0%B0%D0%B8%CC%86%D0%B4%20%D0%9E%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0%20%D0%B8%20IDE%2055d8af92f0b148b9a5fe2856c899d540/Untitled.png" /></p>

<p>Сложный пример с условным брейкпоинтом на 32-ую строчку кода</p>

<ul>
  <li>Exception breakpoints - останавливают выполнение программы при возникновении исключений. Очень полезно в С/С++ чтобы анализировать сегфолты и прочие undefined behaviour. (спойлер - неопределенное поведение иногда ведет себя в отладчике по-другому)</li>
  <li>Условные брейкпоинты - иногда IDE поддерживает устанавливать условие по которому код должен остановиться. Например при итерации по массиву в миллион чисел надо остановиться именно на 42-ой тысяче итераций.</li>
  <li>
    <p>Окна Watches - описание всех доступных переменных, включая содержимое STL-контейнеров.</p>

    <p><img src="%D0%93%D0%B0%D0%B8%CC%86%D0%B4%20%D0%9E%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0%20%D0%B8%20IDE%2055d8af92f0b148b9a5fe2856c899d540/Untitled%201.png" alt="%D0%93%D0%B0%D0%B8%CC%86%D0%B4%20%D0%9E%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0%20%D0%B8%20IDE%2055d8af92f0b148b9a5fe2856c899d540/Untitled%201.png" /></p>

    <p>пример выполнения на лету (Evaluation) и просмотра содержимого всех переменных</p>
  </li>
  <li>Evaluations - позволяет выполнить какой-нибудь код прямо во время выполнения программы! В С/С++ может работать плохо, но в java, c#, python, js работает просто отлично.</li>
  <li>Просмотр дизассемблированного кода. (можно использовать для написания лаб по ассемблеру(нет))</li>
</ul>

<p><img src="%D0%93%D0%B0%D0%B8%CC%86%D0%B4%20%D0%9E%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0%20%D0%B8%20IDE%2055d8af92f0b148b9a5fe2856c899d540/Untitled%202.png" alt="%D0%93%D0%B0%D0%B8%CC%86%D0%B4%20%D0%9E%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0%20%D0%B8%20IDE%2055d8af92f0b148b9a5fe2856c899d540/Untitled%202.png" /></p>

<ul>
  <li>Просмотр содержимого памяти</li>
</ul>

<p><img src="%D0%93%D0%B0%D0%B8%CC%86%D0%B4%20%D0%9E%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0%20%D0%B8%20IDE%2055d8af92f0b148b9a5fe2856c899d540/Untitled%203.png" alt="%D0%93%D0%B0%D0%B8%CC%86%D0%B4%20%D0%9E%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0%20%D0%B8%20IDE%2055d8af92f0b148b9a5fe2856c899d540/Untitled%203.png" /></p>

<p>Просмотр содержимого памяти, если вы в этом что-то поймёте</p>

<ul>
  <li>Просмотр значений переменных. Их часто пишут прямо напротив объявлений переменных для удобства.</li>
</ul>

<p><img src="%D0%93%D0%B0%D0%B8%CC%86%D0%B4%20%D0%9E%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0%20%D0%B8%20IDE%2055d8af92f0b148b9a5fe2856c899d540/Untitled%204.png" alt="%D0%93%D0%B0%D0%B8%CC%86%D0%B4%20%D0%9E%D1%82%D0%BB%D0%B0%D0%B4%D0%BA%D0%B0%20%D0%B8%20IDE%2055d8af92f0b148b9a5fe2856c899d540/Untitled%204.png" /></p>

<p>Просмотр текущих значений переменных прямо в редакторе</p>

<h2 id="видосики">ВИДОСИКИ</h2>

<p>Демонстрация возможностей отладчика CLion.</p>

<p><a href="https://www.youtube.com/watch?v=wUZyoAnPdCY">https://www.youtube.com/watch?v=wUZyoAnPdCY</a></p>

<p>Для тех, кто хочет посмотреть видос как отлаживают программы в Eclipse (такая среда разработки тоже есть, ее используют в курсе С++ на курсере Яндекс)</p>

<table>
  <tbody>
    <tr>
      <td>[Отладчик в Eclipse - Знакомство с искусством C++</td>
      <td>Coursera](https://www.coursera.org/lecture/c-plus-plus-white/otladchik-v-eclipse-PPaz6)</td>
    </tr>
  </tbody>
</table>

<h2 id="чтиво">Чтиво</h2>

<p>Повторите все шаги из туториала по отладке для Visual Studio. ВНИМАНИЕ! Если вы делаете в CLion, то проведите точно такие же действия. <a href="https://www.jetbrains.com/help/clion/debugging-code.html">Документация по хоткеям CLion.</a></p>

<p><a href="https://docs.microsoft.com/ru-ru/visualstudio/debugger/quickstart-debug-with-cplusplus?view=vs-2019">Отладка кода C++ - Visual Studio</a></p>

<p>Хорошая статья с примерами отладки кода. Отладка - это не всегда дебаггер и брейкпоинты, но иногда и правильные сообщения в том же <code class="language-plaintext highlighter-rouge">printf</code>.</p>

<p><a href="https://dev.to/fenbf/11-visual-c-debugging-tips-that-will-save-your-time-2bam">11 Visual C++ Debugging Tips That Will Save Your Time</a></p>
:ET