I"ú<h1 id="–∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã–π-—Ñ–∏–±–æ–Ω–∞—á—á–∏">–ò—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –§–∏–±–æ–Ω–∞—á—á–∏</h1>

<p>–ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –ø–µ—á–∞—Ç–∞—é—â—É—é –≤ –∫–æ–Ω—Å–æ–ª—å $N$ –ø–µ—Ä–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –§–∏–±–æ–Ω–∞—á—á–∏. –ß–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏ –æ–±—Ä–∞–∑—É—é—Ç—Å—è –ø–æ –ø—Ä–∞–≤–∏–ª—É:</p>

<!-- $$a_1 = 1, \\ a_2 = 1, \\ a_{i+1}=a_i + a_{i-1}$$ -->
<p><img src="https://render.githubusercontent.com/render/math?math=a_1%20%3D%201%2C%20%5C%5C%20a_2%20%3D%201%2C%20%5C%5C%20a_%7Bi%2B1%7D%3Da_i%20%2B%20a_%7Bi-1%7D" alt="—Ñ–æ—Ä–º—É–ª–∞" /></p>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include "test.h" // –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
</span>
<span class="c1">// fib –≤—ã–¥–∞–µ—Ç N-—ã–π —á–ª–µ–Ω –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –§–∏–±–æ–Ω–∞—á—á–∏.</span>
<span class="c1">// –ü—Ä–∞–≤–∏–ª–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:</span>
<span class="c1">// fib(0) == 0</span>
<span class="c1">// fib(1) == 1</span>
<span class="c1">// fib(2) == 1</span>
<span class="c1">// fib(n+1) = fib(n) + fib(n-1)</span>
<span class="kt">int</span> <span class="nf">fib</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
  <span class="c1">// –ù–∞–ø–∏—à–∏ –º–µ–Ω—è!</span>
  <span class="k">return</span> <span class="n">n</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">ASSERT_INT</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="o">==</span><span class="p">,</span> <span class="n">fib</span><span class="p">(</span><span class="mi">0</span><span class="p">));</span>
  <span class="n">ASSERT_INT</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">==</span><span class="p">,</span> <span class="n">fib</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span>
  <span class="n">ASSERT_INT</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">==</span><span class="p">,</span> <span class="n">fib</span><span class="p">(</span><span class="mi">2</span><span class="p">));</span>
  <span class="n">ASSERT_INT</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="o">==</span><span class="p">,</span> <span class="n">fib</span><span class="p">(</span><span class="mi">3</span><span class="p">));</span>
  <span class="n">ASSERT_INT</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="o">==</span><span class="p">,</span> <span class="n">fib</span><span class="p">(</span><span class="mi">4</span><span class="p">));</span>
  <span class="n">ASSERT_INT</span><span class="p">(</span><span class="mi">55</span><span class="p">,</span> <span class="o">==</span><span class="p">,</span> <span class="n">fib</span><span class="p">(</span><span class="mi">10</span><span class="p">));</span>
  <span class="n">ASSERT_INT</span><span class="p">(</span><span class="mi">89</span><span class="p">,</span> <span class="o">==</span><span class="p">,</span> <span class="n">fib</span><span class="p">(</span><span class="mi">11</span><span class="p">));</span>
  <span class="n">ASSERT_INT</span><span class="p">(</span><span class="mi">987</span><span class="p">,</span> <span class="o">==</span><span class="p">,</span> <span class="n">fib</span><span class="p">(</span><span class="mi">16</span><span class="p">));</span>

  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p><a href="https://repl.it/@IlyaSiganov/iterfib#main.c">https://repl.it/@IlyaSiganov/iterfib#main.c</a></p>
:ET